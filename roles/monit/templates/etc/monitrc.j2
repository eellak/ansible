########################
## {{ ansible_managed }}
########################
# Check the process at x intervals.
set daemon {{ monit_interval }}
{% if monit_start_delay > 0 %}
  # Delay the first check by x seconds when enabled.
  with start delay {{ monit_start_delay }}
{% endif %}

# Log to syslog.
set logfile {{ monit_logfile }} {{ monit_syslog }}

# Set the location of the Monit id file which stores the unique id
# for this instance.
#set idfile {{ monit_idfile }}

# Set the location of the Monit state file which saves monitoring states
# on each cycle.
set statefile {{ monit_statefile }}

# Connection details for the mail servers.
set mailserver
{% for item in monit_mail_servers %}
  {{ item.host }}
{% if item.port is defined and item.port %}
  port {{ item.port }}
{% endif %}
{% if item.username is defined and item.username %}
  username "{{ item.username }}"
{% endif %}
{% if item.password is defined and item.password %}
  password "{{ item.password }}"
{% endif %}
{% if item.encryption is defined and item.encryption %}
  using {{ item.encryption }}
{% endif %}
{% if not loop.last %}
  ,
{% endif %}
{% endfor %}
  with timeout 30 seconds
  using hostname "{{ ansible_fqdn }}"

# If no mail servers are available events will be queued here.
set eventqueue
  basedir {{ monit_events }}
  slots 100

# Set the e-mail template.
set mail-format {
  from: {{ monit_mail_from }}
  reply-to: {{ monit_mail_reply_to }}
  subject: {{ monit_mail_subject }}
{% if monit_mail_message_sms is defined and monit_mail_message_sms %}
  message: {{ monit_mail_message_sms }}
{% else %}
  message: {{ monit_mail_message | indent(4) }}
{% endif %}
}

{% if monit_mail_alert_to is defined and monit_mail_alert_to %}
# Send out e-mail alerts to the following addresses.
{% for item in monit_mail_alert_to -%}
{% if item.only_on is defined and item.only_on -%}
set alert {{ item.email }} only on { {{ item.only_on }} }
{% else %}
set alert {{ item.email }}
{% endif -%}
{% endfor -%}
{% endif %}

# Set the url for the M/Monit collector
{% if monit_mmonit_url is defined and monit_mmonit_url %}
set mmonit {{ monit_mmonit_url }}
{% endif %}

# Run the http server and allow localhost to view it, this is required to
# make monit's CLI function.
set httpd port {{ monit_http_port }}
  use address {{ monit_http_bind }}
  allow {{ monit_http_bind }}
  allow {{ monit_web_user }}:{{ monit_web_pass }}
SSL ENABLE
PEMFILE /etc/ssl/monit.pem

# Allow additional hosts to access monit's http interface
{% for item in monit_http_allow %}
  allow {{ item }}
{% endfor %}

include /etc/monit.d/*
